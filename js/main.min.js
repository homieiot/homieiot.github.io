"use strict";document.addEventListener("DOMContentLoaded",()=>{var e=document.querySelector(".progress");e&&document.addEventListener("scroll",function(){const t="scrollTop",n="scrollHeight";var s=(document.documentElement[t]||document.body[t])/((document.documentElement[n]||document.body[n])-document.documentElement.clientHeight)*100;e.style.setProperty("--scroll",s+"%")}),document.dispatchEvent(new Event("MainContentChanged"))});const deviceMeta={allowed:new Set(["$homie","$name","$state","$nodes","$extensions"]),deprecated:new Set(["$mac","$localip","$fw/name","$fw/version","$stats","$implementation"]),required:new Set(["$homie","$name","$state","$nodes"])},nodeMeta={allowed:new Set(["$name","$type","$properties","$array"]),deprecated:new Set,required:new Set(["$name","$properties"])},propertyMeta={allowed:new Set(["$name","$settable","$retained","$unit","$datatype","$format","$$value"]),deprecated:new Set([]),required:new Set(["$name"])},valueRestrictions=new Map([["$name",/^.+$/],["$homie",/^[0-9.]+$/],["$settable",/^true$|^false$/],["$retained",/^true$|^false$/],["$state",/^init$|^ready$|^disconnected$|^sleeping$|^lost$|^alert$/],["$nodes",/^[a-z0-9_\-,]+$/i],["$properties",/^[a-z0-9_\-,]+$/i],["$datatype",/^\b(integer|float|boolean|string|enum|color)\b$/]]);function topic_vec_to_object_tree(e,t,n,s,o){for(var i,r=e,c=t,a=1;a<n.length;a+=1){if(n.length-1==a){r[n[a]]?(r[n[a]].$$value=s,c[n[a]].value=o):(r[n[a]]=s,c[n[a]]=o);continue}i=r[n[a]],i||(i={}),i instanceof Object||(i={$$value:i}),r[n[a]]=i,r=i,i=c[n[a]],i||(i={}),i instanceof Object||(i={value:i}),c[n[a]]=i,c=i}}function topic_value_string_to_object(e,t,n,s,o){const a=e.indexOf(" ");if(a==-1)return e.length?{line:n,text:"Not in the correct format. Syntax: topic_name topic_value"}:null;const r=e.substring(0,a),c=e.substring(a+1).trim(),i=r.split("/");if(!i.length||i[0]!=t&&i[0]!=t+"/")return{line:n,text:"Must begin with "+t};if(i.length>2&&i.length<6)topic_vec_to_object_tree(s,o,i,c,n);else return{line:n,text:"Does not describe a device!"};return null}function checkAttributes(e,t,n,s,o,i,a){for(let[r,c]of Object.entries(n))if(r.startsWith("$")){if(s.deprecated.has(r)){i.push({line:a[r],text:e+" '"+t+"' has the deprecated attribute '"+r+"' set! Please check with the newest version of the convention."});continue}if(!s.allowed.has(r)){o.push({line:a[r],text:e+" '"+t+"' doesn't allow '"+r+"' to be set! Must be one of "+Array.from(s.allowed).join(", ")});continue}if(typeof c!="string"){o.push({line:a[r],text:"The key '"+t+"/"+r+"' should not contain children and does not conform to the convention!"});continue}const n=valueRestrictions.get(r);if(n&&!c.match(n)){o.push({line:a[r],text:"The value '"+c+"' of '"+t+"/"+r+"' does not conform to the convention!"});continue}}const r=new Set(Object.keys(n));for(let n of s.required)r.has(n)||o.push({line:-1,text:e+" '"+t+"' requires '"+n+"' to be set!"})}function addLineNumbers(){const t=document.getElementById("homieinput");for(var s=t.offsetHeight,o=parseInt(document.defaultView.getComputedStyle(t,null).getPropertyValue("line-height")),i=s/o,n="",e=0;e<i-2;++e)n+=e+1+"<br>";document.getElementById("linenumbers").innerHTML=n}document.addEventListener("MainContentChanged",()=>{const e=document.getElementById("homieinput");if(!e)return;const t=document.getElementById("homiebasetopic");if(!t)return;e.addEventListener("focus",()=>e.innerText=e.innerText),e.addEventListener("blur",()=>e.innerText=e.innerText),e.addEventListener("change",addLineNumbers),addLineNumbers(),e.innerText=e.innerText,t.addEventListener("change",()=>e.innerText=e.innerText)}),window.homieverificator=()=>{const u=document.getElementById("homiebasetopic").value.split("/")[0],c=document.getElementById("homieinput"),n=c.innerText.split(`
`),s=document.getElementById("homieoutput"),l=document.getElementById("validationresult");for(var t,r,e=[],o=[],d={},i={},a=0;a<n.length;a+=1){const t=topic_value_string_to_object(n[a],u.length>0?u:"homie",a,d,i);t&&e.push(t)}r=/^[a-z0-9]+[a-z0-9-]*$/i;for(let[t,n]of Object.entries(d)){r.test(t)||e.push({line:-1,text:"Device ''"+t+"' id does not conform to topic id restriction!"}),checkAttributes("Device",t,n,deviceMeta,e,o,i[t]),(n.$extensions||"").trim().length!=0&&o.push({line:i[t].$extensions,text:"Device ''"+t+"' has extensions enabled, validation might be inaccurate."});let s=new Set((n.$nodes||"").split(",").map(e=>e.trim()));for(let[a,c]of Object.entries(n)){if(a.startsWith("$"))continue;r.test(a)||e.push({line:-1,text:"Node '"+a+"' id does not conform to topic id restriction!"}),s.has(a)||e.push({line:-1,text:"Node '"+a+"' is not published by its device!"}),s.delete(a),checkAttributes("Node",a,c,nodeMeta,e,o,i[t][a]);let l=new Set((c.$properties||"").split(",").map(e=>e.trim()));for(let[n,s]of Object.entries(c)){if(n.startsWith("$"))continue;if(r.test(n)||e.push({line:-1,text:"Property '"+n+"' of node '"+t+"/"+a+"' id does not conform to topic id restriction!"}),l.has(n)||e.push({line:-1,text:"Property '"+n+"' of node '"+t+"/"+a+"' is not published by node!"}),l.delete(n),checkAttributes("Property",n,s,propertyMeta,e,o,i[t][a][n]),s.$$value){const r=i[t][a][n].value,o=s.$$value,c=s.$format;switch(s.$datatype){case"integer":o.match(/^[\d]+$/)||e.push({line:r,text:"Property '"+n+"' value of type integer contains invalid data: '"+o+"'!"});break;case"float":o.match(/^[+-]?([0-9]*[.])?[0-9]+$/)||e.push({line:r,text:"Property '"+n+"' value of type float contains invalid data: '"+o+"'!"});break;case"boolean":o.match(/^\b(true|false)\b$/)||e.push({line:r,text:"Property '"+n+"' value of type boolean contains invalid data: '"+o+"'!"});break;case"enum":if(!c){e.push({line:r,text:"Property '"+n+"' is of type enum but $format is not set!"});continue}c.split(",").indexOf(o)==-1&&e.push({line:r,text:"Property '"+n+"' value of type enum contains invalid data: '"+o+"'. Must be one of '"+c+"'!"});break;case"color":if(!c||!c.match(/^\b(rgb|hsv)\b/)){e.push({line:r,text:"Property '"+n+"' is of type color but $format is not 'rgb' or 'hsv'!"});continue}o.match(/[\d]{3},[\d]{3},[\d]{3}/)||e.push({line:r,text:"Property '"+n+"' value of type color must be in the format xxx,xxx,xxx!"});break;default:case"string":break}}}for(let n of l)e.push({line:-1,text:"Property '"+n+"' of node '"+t+"/"+a+"' is not defined!"})}for(let n of s)e.push({line:-1,text:"Node '"+n+"' of device '"+t+"' is not defined!"})}if(s.innerHTML="",o.length&&(t="<table><thead><tr><th>Line</th><th>Warning message</th></tr></thead><tbody>",o.forEach(e=>{const s=Number.isInteger(e.line)?[e.line]:Object.values(e.line);for(const o of s)t+="<tr><td>"+(o<0?"n/a":o+1)+"</td><td>"+e.text+"</td></tr>",o>=0&&(n[o]="<b style='color:orange'>"+n[o]+"</b>")}),t+="</tbody></table>",s.innerHTML=s.innerHTML+t,c.innerHTML=n.join(`
`)),e.length)t="<table><thead><tr><th>Line</th><th>Error message</th></tr></thead><tbody>",e.forEach(e=>{const s=Number.isInteger(e.line)?[e.line]:Object.values(e.line);for(const o of s)t+="<tr><td>"+(o<0?"n/a":o+1)+"</td><td>"+e.text+"</td></tr>",o>=0&&(n[o]="<b style='color:red'>"+n[o]+"</b>")}),t+="</tbody></table>",s.innerHTML=s.innerHTML+t,c.innerHTML=n.join(`
`);else{t="<div class='card'>Devices:<ul>";for(let[n,e]of Object.entries(d)){if(!e.$name)continue;t+="<li>"+e.$name+" with Nodes:<ul>";for(let[s,n]of Object.entries(e)){if(!n.$name)continue;t+="<li>"+n.$name+" with Properties:<ul>";for(let[s,e]of Object.entries(n)){if(!e.$name)continue;t+="<li>"+e.$name+"</li>"}t+="</ul></li>"}t+="</ul></li>"}t+="</ul></div>",s.innerHTML=s.innerHTML+t}e.length!=0?l.innerHTML="<b style='color:red'>Validation failed</b>":o.length!=0?l.innerHTML="<b style='color:orange'>Validation successful with warnings</b>":l.innerHTML="<b style='color:green'>Validation successful</b>"}